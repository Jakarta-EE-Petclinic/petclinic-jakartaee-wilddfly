<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<server description="defaultServer">
	<!-- tag::features[] -->
	<!--The Liberty Maven Plugin has generated Liberty features necessary for your application in configDropins/overrides/generated-features.xml-->
	<featureManager>
		<feature>jakartaee-9.1</feature>
		<feature>microProfile-5.0</feature>
		<feature>restfulWS-3.0</feature>
		<feature>jsonb-2.0</feature>
		<feature>jsonp-2.0</feature>
		<feature>xmlBinding-3.0</feature>
		<!--
		<feature>sessionDatabase-1.0</feature>
		<feature>appAuthentication-2.0</feature>
		<feature>appAuthorization-2.0</feature>
		<feature>appSecurity-4.0</feature>
		<feature>adminCenter-1.0</feature>
		<feature>eventLogging-1.0</feature>
		-->
		<feature>pages-3.0</feature>
		<feature>restConnector-2.0</feature>
	</featureManager>
	<!-- end::features[] -->

	<basicRegistry id="basic" realm="BasicRealm">
		<user name="admin" password="admin"/>
		<user name="tw" password="twpwd"/>
	</basicRegistry>

	<administrator-role>
		<user>admin</user>
	</administrator-role>

	<httpSession idLength="56"/>

	<quickStartSecurity userName="admin" userPassword="admin" />
	<keyStore id="defaultKeyStore" password="password" location="key.jks" type="JKS"/>

	<applicationMonitor updateTrigger="mbean" />
	<logging consoleLogLevel="INFO" />

	<remoteFileAccess>
		<writeDir>${server.config.dir}/dropins</writeDir>
	</remoteFileAccess>

	<!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->

	<httpEndpoint id="defaultHttpEndpoint" host="*" httpPort="9080" httpsPort="9443">
		<accessLogging filepath="${server.output.dir}/logs/http_defaultEndpoint_access.log"
		               logFormat='%h %i %u %t "%r" %s %b %D %{R}W' />
	</httpEndpoint>
	<logging jsonAccessLogFields="logFormat"/>

	<serverCommands startServerTimeout="240" stopServerTimeout="240"/>

	<variable name="io_openliberty_guides_system_inMaintenance" value="false"/>

	<logging traceSpecification="*=info:RRA=all:com.ibm.ws.postgresql.logwriter=all" />

	<!-- Postgres Database Configuration -->
	<dataSource id="DefaultDataSource"
	            jdbcDriverRef="postgresqlDriver"
	            jndiName="jdbc/dsPetclinicJakartaee"
	            transactional="true"
	            type="javax.sql.ConnectionPoolDataSource">

		<properties databaseName="petclinic_jakartaee"
		            password="petclinic_jakartaeepwd"
		            portNumber="5432"
		            serverName="localhost"
		            user="petclinic_jakartaee"/>
	</dataSource>

	<jdbcDriver id="postgresqlDriver"
	            javax.sql.ConnectionPoolDataSource="org.postgresql.ds.PGConnectionPoolDataSource"
	            javax.sql.XADataSource="org.postgresql.xa.PGXADataSource"
	            libraryRef="postgresqlLibrary"/>

	<library id="postgresqlLibrary">
		<file name="${server.config.dir}/postgresql.jar"/>
	</library>

	<applicationManager autoExpand="true"/>

	<webApplication contextRoot="/petclinic" location="petclinic.war" />

	<ssl id="defaultSSLConfig" trustDefaultCerts="true" />
</server>